apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}.apk"
        }
    }

    if (file("../internal/android/key/key.store").exists()) {
        signingConfigs {
            release {
                storeFile file('../internal/android/key/key.store')
                keyAlias = 'cprocsp_android'
                storePassword 'CryptoPro'
                keyPassword 'CryptoPro'
            }
        }
    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "com.elewise.ldmobile"
        minSdkVersion 23
        targetSdkVersion 29
        multiDexEnabled true
        signingConfig signingConfigs.debug
        versionCode = 1
        versionName = "1.0"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
        // additionalParameters =["--core-library"]
    }

    packagingOptions {
        exclude 'META-INF/Digest.CP'
        exclude 'META-INF/Sign.CP'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
        doNotStrip "*/arm64-v8a/*.so"
        doNotStrip "*/armeabi-v7a/*.so"
        doNotStrip "*/x86_64/*.so"
        doNotStrip "*/x86/*.so"
        exclude 'META-INF/proguard/coroutines.pro'
    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            // shrinkResources true
            minifyEnabled false

            if (file("../internal/proguard/ACSPInClientApp.pro").exists()) {
                proguardFiles '../internal/proguard/ACSPInClientApp.pro'
            }
            else {
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }

            if (file("../internal/android/key/key.store").exists()) {
                signingConfig signingConfigs.release
            }

        }
    }
}

configurations {
    externalLibs
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    compile 'androidx.multidex:multidex:2.0.0'

    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.5'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.8.11.1"

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2"

    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    def kotlinCoroutineVersion = "1.3.7"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"

    implementation 'org.bouncycastle:bcprov-jdk15on:1.60'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.60'
    implementation 'org.ini4j:ini4j:0.5.1'
    compileOnly 'org.json:json:20180813'
    compileOnly 'org.apache.santuario:xmlsec:1.4.4'
    compileOnly 'xalan:serializer:2.7.2'
    compileOnly 'commons-logging:commons-logging:1.2'

    implementation fileTree(dir: 'libs', include: ['*.aar'])

    testImplementation 'org.powermock:powermock-api-mockito:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule-agent:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4-rule:1.6.1'
    testImplementation 'org.powermock:powermock-module-junit4:1.6.1'

}

task copySharedLibrary (type: Copy) {
    from configurations.externalLibs
    into "libs"
}

repositories {
    // -PuseMavenLocal означает использование локального maven-репозитория.
    if (project.hasProperty('useMavenLocal')) { // && project.getProperty('useMavenLocal') == 'true') {
        repositories {
            mavenLocal()
        }
    }

    maven {
        // Содержит наши релизные библиотеки с номером ревизии в названии,
        // например, JCP-2.0.XXXXX.jar, где XXXXX - номер ревизии.
        url "http://build-jcp/jcp_rep"
    }

    maven {
        // Содержит наши релизные библиотеки без номера ревизии в названии,
        // например, JCP-2.0.jar, а также сторонние библиотеки, например,
        // asn1rt, proguard и другие.
        url "http://build-jcp/repository"
    }

    mavenCentral()
    google()
    jcenter()
}
